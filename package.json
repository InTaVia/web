{
  "name": "@intavia/web",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "build": "next build",
    "cypress": "cypress open --config-file ./cypress/cypress.config.json",
    "cypress:headless": "cypress run --config-file ./cypress/cypress.config.json",
    "dev": "next dev",
    "format": "prettier . --list-different --ignore-path .gitignore",
    "format:fix": "npm run format -- --write",
    "lint": "run-p lint:*:check",
    "lint:fix": "run-p lint:*:fix",
    "lint:code:check": "next lint --ignore-path .gitignore",
    "lint:code:fix": "npm run lint:code:check -- --fix",
    "lint:styles:check": "stylelint '**/*.css' --cache --cache-location .next/cache/stylelint/ --ignore-path .gitignore",
    "lint:styles:fix": "npm run lint:styles:check -- --fix",
    "prepare": "simple-git-hooks || true",
    "start": "next start",
    "stories:build": "build-storybook --config-dir stories --quiet",
    "stories:build:docs": "npm run stories:build --docs",
    "stories:dev": "start-storybook --config-dir stories --no-open --port 6006",
    "stories:dev:docs": "npm run stories:dev --docs",
    "test": "jest --config ./test/jest.config.mjs --passWithNoTests",
    "test:ci": "npm run test -- --ci",
    "test:coverage": "npm run test -- --coverage",
    "test:watch": "npm run test -- --watch",
    "test:e2e:dev": "start-server-and-test dev 3000 cypress",
    "test:e2e:dev:headless": "start-server-and-test dev 3000 cypress:headless",
    "test:e2e:start": "start-server-and-test start 3000 cypress",
    "test:e2e:start:headless": "start-server-and-test start 3000 cypress:headless",
    "typecheck": "tsc -p ./tsconfig.json --noEmit && tsc -p ./cypress/tsconfig.json --noEmit",
    "validate": "npm run format && npm run lint && npm run typecheck && npm run test"
  },
  "engines": {
    "node": ">=16.13.0",
    "npm": ">=8.3.0"
  },
  "packageManager": "npm@8.3.1",
  "dependencies": {
    "@emotion/cache": "^11.7.1",
    "@emotion/react": "^11.8.1",
    "@emotion/server": "^11.4.0",
    "@emotion/styled": "^11.8.1",
    "@mui/icons-material": "^5.5.0",
    "@mui/material": "^5.5.0",
    "@reduxjs/toolkit": "^1.8.0",
    "@turf/turf": "^6.5.0",
    "d3": "^7.0.0",
    "d3-axis": "^3.0.0",
    "d3-brush": "^3.0.0",
    "d3-path": "^3.0.1",
    "d3-scale": "^4.0.2",
    "d3-selection": "^3.0.0",
    "d3-time-format": "^4.1.0",
    "date-fns": "^2.28.0",
    "final-form": "^4.20.7",
    "final-form-arrays": "^3.0.2",
    "final-form-focus": "^1.1.2",
    "geojson-world-map": "^0.0.2",
    "html-to-image": "^1.9.0",
    "leaflet": "^1.8.0",
    "mapbox-gl": "npm:empty-npm-package@^1.0.0",
    "maplibre-gl": "^2.1.9",
    "next": "^12.1.2",
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "react-final-form": "^6.5.9",
    "react-final-form-arrays": "^3.1.3",
    "react-grid-layout": "^1.3.4",
    "react-leaflet": "^3.2.5",
    "react-map-gl": "^7.0.10",
    "react-redux": "^7.2.6",
    "react-resize-detector": "^7.0.0",
    "zod": "^3.15.1"
  },
  "devDependencies": {
    "@babel/core": "^7.17.7",
    "@faker-js/faker": "^6.1.1",
    "@jest/types": "^27.5.1",
    "@next/eslint-plugin-next": "^12.1.2",
    "@storybook/addon-a11y": "^6.4.19",
    "@storybook/addon-actions": "^6.4.19",
    "@storybook/addon-essentials": "^6.4.19",
    "@storybook/addon-interactions": "^6.4.19",
    "@storybook/addon-links": "^6.4.19",
    "@storybook/builder-webpack5": "^6.4.19",
    "@storybook/manager-webpack5": "^6.4.19",
    "@storybook/react": "^6.4.19",
    "@storybook/testing-library": "^0.0.9",
    "@testing-library/cypress": "^8.0.2",
    "@testing-library/jest-dom": "^5.16.2",
    "@testing-library/react": "^12.1.4",
    "@testing-library/user-event": "^13.5.0",
    "@types/d3": "^7.0.0",
    "@types/d3-axis": "^3.0.1",
    "@types/d3-brush": "^3.0.1",
    "@types/d3-path": "^3.0.0",
    "@types/d3-scale": "^4.0.2",
    "@types/d3-selection": "^3.0.2",
    "@types/d3-time-format": "^4.0.0",
    "@types/final-form-focus": "^1.1.2",
    "@types/node": "^16.11.26",
    "@types/react": "^17.0.39",
    "@types/react-dom": "^17.0.13",
    "@types/react-grid-layout": "^1.3.2",
    "@types/react-leaflet": "^2.8.2",
    "@types/react-redux": "^7.1.23",
    "@types/webpack": "^5.28.0",
    "@typescript-eslint/eslint-plugin": "^5.14.0",
    "@typescript-eslint/parser": "^5.14.0",
    "autoprefixer": "^10.4.2",
    "babel-loader": "^8.2.3",
    "cross-env": "^7.0.3",
    "cypress": "^9.5.3",
    "eslint": "^8.11.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-import-resolver-typescript": "^2.5.0",
    "eslint-plugin-cypress": "^2.12.1",
    "eslint-plugin-import": "^2.25.4",
    "eslint-plugin-jest": "^26.1.1",
    "eslint-plugin-jest-dom": "^4.0.1",
    "eslint-plugin-jsx-a11y": "^6.5.1",
    "eslint-plugin-react": "^7.29.3",
    "eslint-plugin-react-hooks": "^4.3.0",
    "eslint-plugin-simple-import-sort": "^7.0.0",
    "eslint-plugin-storybook": "^0.5.7",
    "eslint-plugin-testing-library": "^5.1.0",
    "jest": "^27.5.1",
    "jest-watch-typeahead": "^1.0.0",
    "lint-staged": "^12.3.5",
    "match-sorter": "^6.3.1",
    "msw": "^0.39.2",
    "msw-storybook-addon": "^1.6.1",
    "npm-run-all": "^4.1.5",
    "postcss": "^8.4.8",
    "postcss-custom-media": "^8.0.0",
    "postcss-nesting": "^10.1.3",
    "prettier": "^2.6.0",
    "simple-git-hooks": "^2.7.0",
    "start-server-and-test": "^1.14.0",
    "stylelint": "^14.6.0",
    "stylelint-config-prettier": "^9.0.3",
    "stylelint-config-standard": "^25.0.0",
    "stylelint-order": "^5.0.0",
    "typescript": "^4.6.2"
  },
  "browserslist": {
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ],
    "production": [
      ">=0.75%",
      "not dead",
      "not op_mini all"
    ]
  },
  "eslintConfig": {
    "root": true,
    "reportUnusedDisableDirectives": true,
    "extends": [
      "eslint:recommended",
      "plugin:@typescript-eslint/recommended",
      "plugin:@next/next/core-web-vitals",
      "plugin:import/recommended",
      "plugin:import/typescript",
      "plugin:react/recommended",
      "plugin:react/jsx-runtime",
      "plugin:react-hooks/recommended",
      "plugin:jsx-a11y/recommended",
      "prettier"
    ],
    "plugins": [
      "simple-import-sort"
    ],
    "env": {
      "browser": true,
      "es6": true,
      "node": true
    },
    "parserOptions": {
      "project": "./**/tsconfig.json",
      "extraFileExtensions": [
        ".cjs",
        ".mjs"
      ]
    },
    "settings": {
      "import/resolver": {
        "typescript": {
          "project": "./*/tsconfig.json",
          "alwaysTryTypes": true
        }
      },
      "react": {
        "version": "detect"
      }
    },
    "rules": {
      "arrow-body-style": [
        "error",
        "always"
      ],
      "eqeqeq": [
        "error",
        "always",
        {
          "null": "ignore"
        }
      ],
      "no-console": [
        "warn",
        {
          "allow": [
            "warn",
            "error"
          ]
        }
      ],
      "no-implicit-coercion": "error",
      "no-param-reassign": [
        "error",
        {
          "props": true,
          "ignorePropertyModificationsFor": [
            "state"
          ]
        }
      ],
      "no-multiple-empty-lines": "error",
      "no-restricted-globals": [
        "error",
        {
          "name": "isNaN",
          "message": "Use Number.isNaN instead."
        }
      ],
      "no-var": "error",
      "no-throw-literal": "error",
      "prefer-const": "error",
      "@typescript-eslint/array-type": [
        "error",
        {
          "default": "generic"
        }
      ],
      "@typescript-eslint/consistent-type-exports": "error",
      "@typescript-eslint/consistent-type-imports": "error",
      "@typescript-eslint/no-floating-promises": "error",
      "@typescript-eslint/no-unnecessary-condition": "error",
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          "argsIgnorePattern": "^_",
          "varsIgnorePattern": "^_"
        }
      ],
      "@typescript-eslint/sort-type-union-intersection-members": "error",
      "@typescript-eslint/strict-boolean-expressions": "error",
      "@typescript-eslint/switch-exhaustiveness-check": "error",
      "import/first": "error",
      "import/newline-after-import": "error",
      "import/no-anonymous-default-export": "error",
      "import/no-duplicates": "error",
      "jsx-a11y/anchor-is-valid": [
        "error",
        {
          "components": [
            "Link"
          ],
          "aspects": [
            "invalidHref",
            "preferButton"
          ]
        }
      ],
      "jsx-a11y/no-autofocus": [
        "error",
        {
          "ignoreNonDOM": true
        }
      ],
      "jsx-a11y/no-onchange": "off",
      "jsx-a11y/no-redundant-roles": [
        "error",
        {
          "ul": [
            "list"
          ],
          "ol": [
            "list"
          ]
        }
      ],
      "react/boolean-prop-naming": "error",
      "react/function-component-definition": "error",
      "react/prop-types": "off",
      "simple-import-sort/imports": "error",
      "simple-import-sort/exports": "error"
    },
    "overrides": [
      {
        "files": [
          "**/*.cjs"
        ],
        "rules": {
          "@typescript-eslint/no-var-requires": "off"
        }
      },
      {
        "files": [
          "**/*.test.@(ts|tsx)"
        ],
        "extends": [
          "plugin:jest/recommended",
          "plugin:jest/style",
          "plugin:jest-dom/recommended",
          "plugin:testing-library/react"
        ]
      },
      {
        "files": [
          "**/*.test.e2e.@(ts|tsx)"
        ],
        "extends": "plugin:cypress/recommended"
      },
      {
        "files": [
          "**/*.stories.tsx"
        ],
        "plugins": [
          "storybook"
        ],
        "rules": {
          "@typescript-eslint/explicit-module-boundary-types": "off",
          "storybook/await-interactions": "error",
          "storybook/context-in-play-function": "error",
          "storybook/default-exports": "error",
          "storybook/hierarchy-separator": "warn",
          "storybook/no-redundant-story-name": "warn",
          "storybook/prefer-pascal-case": "warn",
          "storybook/story-exports": "error",
          "storybook/use-storybook-expect": "error",
          "storybook/use-storybook-testing-library": "error"
        }
      }
    ],
    "ignorePatterns": "public/mockServiceWorker.js"
  },
  "lint-staged": {
    "*.@(cjs|js|mjs|ts|tsx)": [
      "eslint --cache --cache-location .next/cache/eslint/ --fix",
      "prettier --write"
    ],
    "*.css": [
      "stylelint --cache --cache-location .next/cache/stylelint/ --fix",
      "prettier --write"
    ],
    "*.@(json|md)": "prettier --write"
  },
  "msw": {
    "workerDirectory": "public"
  },
  "postcss": {
    "plugins": {
      "postcss-custom-media": {},
      "postcss-nesting": {},
      "autoprefixer": {}
    }
  },
  "prettier": {
    "endOfLine": "lf",
    "printWidth": 100,
    "proseWrap": "always",
    "semi": true,
    "singleQuote": true,
    "tabWidth": 2,
    "trailingComma": "all"
  },
  "simple-git-hooks": {
    "pre-commit": "npx lint-staged",
    "pre-push": "npm run validate"
  },
  "stylelint": {
    "extends": [
      "stylelint-config-standard",
      "stylelint-config-prettier"
    ],
    "plugins": [
      "stylelint-order"
    ],
    "rules": {
      "at-rule-no-vendor-prefix": true,
      "media-feature-name-no-vendor-prefix": true,
      "property-no-vendor-prefix": true,
      "selector-no-vendor-prefix": true,
      "value-no-vendor-prefix": true,
      "alpha-value-notation": "percentage",
      "color-function-notation": "modern",
      "color-named": "never",
      "color-no-hex": true,
      "font-weight-notation": "numeric",
      "hue-degree-notation": "angle",
      "declaration-block-no-redundant-longhand-properties": [
        true,
        {
          "ignoreShorthands": [
            "/grid/"
          ]
        }
      ],
      "selector-id-pattern": [
        "^(_{0,2}[a-z][a-z0-9]*)(-[a-z0-9]+)*$",
        {
          "message": "Expected id selector to be kebab-case"
        }
      ],
      "value-keyword-case": [
        "lower",
        {
          "camelCaseSvgKeywords": true
        }
      ],
      "order/order": [
        [
          "custom-properties",
          "declarations",
          {
            "type": "at-rule",
            "name": "supports"
          },
          {
            "type": "at-rule",
            "name": "media"
          },
          "rules",
          "at-rules"
        ],
        {
          "severity": "warning"
        }
      ]
    }
  }
}
